#!/bin/bash
# enter the correct virtualenv and set PYTHONPATH and add rpc flags before running the command
# i don't love this, but it works
# usage: makerdao-helper plunger --help
# usage: APP=market-maker-keeper makerdao-helper oasis-market-maker-keeper --help
# note: this uses the python module name, so 0x is zrx!

set -eu

if [ -n "${APP:-}" ]; then
  app=$APP
else
  app=$1
  # notice that we do NOT shift here.
fi

# TODO: if nix things aren't on the path, add them?

# enter the virtualenv so that when their script calls python, it calls the right python
. "/opt/${app}/bin/activate"

 # TODO: gdi. flamegraph doesn't work because of these scripts. i wish they just installed things the python way...
#export PATH="/opt/${app}/src/bin:$PATH"
if [ -n "${PYTHONPATH:-}" ]; then
  PYTHONPATH=${PYTHONPATH}:/opt/${app}/src
else
  PYTHONPATH=/opt/${app}/src
fi

if [ -d "/opt/${app}/src/lib" ]; then
  pushd "/opt/${app}/src/lib"
  for x in *; do
    PYTHONPATH=${PYTHONPATH}:$(pwd)/${x}
  done
  popd
fi

export PYTHONPATH

cmd=$1
shift

# TODO: I wish they were more consistent :'(
if [ "${app//-/_}" = "auction_keeper" ] && [ "${cmd//-/_}" = "auction_keeper" ]; then
  cmd=main
fi


cmd_array=(
  python3
)

if [ "${PROFILE_LOG:-}" ]; then
  cmd_array+=(
    -m flamegraph -o "$PROFILE_LOG"
  )
fi

cmd_array+=(
  "/opt/${app}/src/${app}/${app//-/_}/${cmd//-/_}.py"
)

# add --rpc-host and --rpc-port unless NO_RPC is set to something
if [ -z "${NO_RPC:-}" ]; then
  if [ -n "${RPC_HOST:-}" ]; then
    cmd_array+=(
      --rpc-host "$RPC_HOST"
    )
  fi

  if [ -n "${RPC_PORT:-}" ]; then
    cmd_array+=(
      --rpc-port "$RPC_PORT"
    )
  fi
fi

if [ -n "${DEBUG:-}" ]; then
  cmd_array+=(
    --debug
  )
fi

exec "${cmd_array[@]}" "$@"
